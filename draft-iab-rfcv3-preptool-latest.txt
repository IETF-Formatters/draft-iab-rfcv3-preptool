



Network Working Group                                         P. Hoffman
Internet-Draft                                                     ICANN
Intended status: Informational                             J. Hildebrand
Expires: October 17, 2016                                          Cisco
                                                          April 15, 2016


                      RFC v3 Prep Tool Description
                        draft-iab-rfcv3-preptool

Abstract

   This document describes some aspects of the "prep tool" that is
   expected to be created when the new RFC v3 specification is deployed.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on October 17, 2016.

Copyright Notice

   Copyright (c) 2016 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.





Hoffman & Hildebrand    Expires October 17, 2016                [Page 1]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  v3 Prep Tool Usage Scenarios  . . . . . . . . . . . . . . . .   2
   3.  Internet-Draft Submission . . . . . . . . . . . . . . . . . .   3
   4.  Canonical RFC Preparation . . . . . . . . . . . . . . . . . .   4
   5.  What the v3 Prep Tool Does  . . . . . . . . . . . . . . . . .   4
   6.  Additional Uses for the Prep Tool . . . . . . . . . . . . . .  12
   7.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .  12
   8.  Security Considerations . . . . . . . . . . . . . . . . . . .  12
   9.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .  13
   10. Informative References  . . . . . . . . . . . . . . . . . . .  13
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .  13

1.  Introduction

   For the future of the RFC format, the RFC Editor has decided that XML
   (using the XML2RFCv3 vocabulary [I-D.iab-xml2rfc]) is the canonical
   format, in the sense that it is the data that is blessed by the
   process as the actual RFC.  See [RFC6949] for more detail on this.

   Most people will read other formats, such as HTML, PDF, ASCII text,
   or other formats of the future, however.  In order to ensure each of
   these formats is as similar as possible to one another as well as the
   canonical XML, there is a desire that the translation from XML into
   the other formats will be straightforward syntactic translation.  To
   make that happen, a good amount of data will need to be in the XML
   format that is not there today.  That data will be added by a program
   called the "prep tool", which will often run as a part of the xml2rfc
   process.

   This draft specifies the steps that the prep tool will have to take.
   As changes to [I-D.iab-xml2rfc] are made, this document will be
   updated.

   The details (particularly any vocabularies) described in this
   document are expected to change based on experience gained in
   implementing the RFC production center's toolset.  Revised documents
   will be published capturing those changes as the toolset is
   completed.  Other implementers must not expect those changes to
   remain backwards-compatible with the details described in this
   document.

2.  v3 Prep Tool Usage Scenarios

   The prep tool will have several settings:

   o  Internet-Draft preparation



Hoffman & Hildebrand    Expires October 17, 2016                [Page 2]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   o  Canonical RFC preparation

   There are only a few differences between the two settings.  For
   example, the boilerplate output will be different, as will the date
   output on the front page.

   Note that this only describes what the IETF-sponsored prep tool does.
   Others might create their own work-alike prep tools for their own
   formatting needs.  However, an output format developer does not need
   to change the prep tool in order to create their own formatter: they
   only need to be able to consume prepared text.  The IETF-sponsored
   prep tool runs in two different modes: "I-D" mode when the tool is
   run during Internet-Draft submission and processing, and "RFC
   production mode" when the tool is run by the RFC Production Center
   (RPC) while producing an RFC.

   This tool is described as if it is a separate tool so that we can
   reason about its architectural properties.  In actual implementation,
   it might be a part of a larger suite of functionality.

3.  Internet-Draft Submission

   When the IETF draft submission tool accepts v3 XML as an input
   format, the submission tool runs the submitted file through the prep
   tool.  This is called "I-D mode" in this document.  If the tool finds
   no errors, it keeps two XML files: the submitted file and the prepped
   file.

   The prepped file provides a record of what a submitter was attesting
   to at the time of submission.  It represents a self-contained record
   of what any external references resolved to at the time of
   submission.

   The prepped file is used by the IETF formatters to create outputs
   such as HTML, PDF, and text (or the tools act in a way
   indistinguishable from this).  The message sent out by the draft
   submission tool includes a link to the original XML as well as the
   other outputs, including the prepped XML.

   The prepped XML can be used by tools not yet developed to output new
   formats that have as similar output as possible to the current IETF
   formatters.  For example, if the IETF creates a .mobi output renderer
   later, it can run that renderer on all of the prepped XML that has
   been saved, ensuring that the content of included external references
   and all of the part numbers and boilerplate will be the same as what
   was produced by the previous IETF formatters at the time the document
   was first uploaded.




Hoffman & Hildebrand    Expires October 17, 2016                [Page 3]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


4.  Canonical RFC Preparation

   During AUTH48, the RPC will run the prep tool in canonical RFC
   preparation mode and make the results available to the authors so
   they can see what the final output might look like.  When the
   document is done with AUTH48 review, the RPC runs the prep tool in
   canonical RFC preparation mode one last time, locks down the
   canonicalized XML, runs the formatters for the publication formats,
   and publishes all of those.  It is probably a good idea for the RPC
   to keep a copy of the input XML file from the various steps of the
   RFC production process.

   This document assumes that the prep tool will be used in the
   following manner by the RFC Production Center; they may use something
   different, or with different configuration.

   Similarly to I-D's, the prepped XML can be used later to re-render
   the output formats, or to generate new formats.

5.  What the v3 Prep Tool Does

   The steps listed here are in order of processing.  In all cases where
   the prep tool would "add" an attribute or element, if that attribute
   or element already exists, the prep tool will check that the
   attribute or element is correct.  If the value is incorrect, the prep
   tool will warn with the old and new values, then replace the
   incorrect value with the new value.

   Currently, the IETF uses a tool called "idnits" to check text input
   to the Internet-Drafts publishing process. idnits indicates if it
   encountered any errors, and also provide text with all of the
   warnings and errors in a human-readable form.  The prep tool should
   probably check for as many of these errors and warnings as possible
   when it is processing the XML input.  For the moment, tooling might
   run idnts on the text output from the prepared XML.  The list below
   contains some of those errors and warnings, but the deployed version
   of the prep tool may contain additional steps to include more or the
   checks from idnits.

   1.   Fully process any DTDs in the input document, then remove the
        DTD.  At a minimum, this entails processing the entityrefs and
        includes for external files.

   2.   Process all <x:include> elements.  Note: <x:include>d XML may
        include more <x:include>s (with relative URLs rooted at the
        xml:base).  The tool may be configurable with a limit on the
        depth of recursion.




Hoffman & Hildebrand    Expires October 17, 2016                [Page 4]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   3.   Remove processing instructions.

   4.   Check the input against the RNG in [I-D.iab-xml2rfc].  If the
        input is not valid, give an error.

   5.   If the <front> element of the <rfc> element does not already
        have a <seriesInfo> element, add a <seriesInfo> element with the
        name attribute based on the mode in which the preptool is
        running ("Internet-Draft" for Draft mode and "RFC" for RFC
        mode") and a value that is the input filename minus any
        extension for Internet-Drafts, and is a number specified by the
        RFC Editor for RFCs.

   6.   If the <front> element in the <rfc> element does not contain a
        <date> element, add it and fill in the "day", "month", and
        "year" attibutes from the current date.  If the <front> element
        in the <rfc> element has a <date> element with "day", "month",
        and "year" attibutes, but the date indicated is more than three
        days in the past or is in the future, give a warning.  If the
        <front> element in the <rfc> element has a <date> element with
        some but not all of the "day", "month", and "year" attibutes,
        give an error.

   7.   Fill in the "prepTime" attribute of <rfc> with the current
        datetime.

   8.   Normalize the values of "month" attributes in all <date>
        elements in <front> elements in <rfc> elements to numeric
        values.

   9.   If in I-D mode, fill in "expiresDate" attribute of <rfc> based
        on the <date> element of the document's <front> element.

   10.  Fill in any default values for attributes on elements, except
        "keepWithNext" and "keepWithPrevious" of <t>, and "toc" of
        <section>.  Some default values can be found in the Relax NG
        schema, while others can be found in the prose describing the
        elements in [I-D.iab-xml2rfc]).

   11.  If in RFC production mode, remove XML comments.

   12.  If in RFC production mode, remove all <cref> elements.

   13.  Create a <boilerplate> element if it does not exist.  If there
        are any children of the <boilerplate> element, produce a warning
        that says "Existing boilerplate being removed.  Other tools,
        specifically the draft submission tool, will treat this
        condition as an error" and remove the existing children.



Hoffman & Hildebrand    Expires October 17, 2016                [Page 5]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   14.  Add the "Status of this Memo" section to the <boilerplate>
        element with current values.  The application will use the
        "submissionType", and "consensus" attributes of the <rfc>
        element, the <workgroup> element, and the "status" and "stream"
        attributes of the <seriesInfo> element, to determine which
        [I-D.iab-rfc5741bis] boilerplate to include, as described in
        Appendix A of [I-D.iab-xml2rfc].

   15.  Add the "Copyright Notice" section to the <boilerplate> element.
        The application will use the "ipr" and "submissionType"
        attributes of the <rfc> element and the <date> element to
        determine which portions and which version of the TLP to use, as
        described in A.1 of [I-D.iab-xml2rfc].

   16.  If in I-D mode, if there is a <note> element with a
        "removeInRFC" attribute that has the value "true", add a
        paragraph to the top of the <note> element with the text "This
        note is to be removed before publishing as an RFC." unless a
        paragraph consisting of that exact text already exists.

   17.  If in RFC production mode, if there is a <note> element with a
        "removeInRFC" attribute that has the value "true", remove the
        <note> element.

   18.  In every <email>, <organization>, <street>, <city>, <region>,
        <country>, and <code> element, if there is an "ascii" attribute
        and the value of tha attribute is the same as the content of the
        element, remove the "ascii" element and issue a warning about
        the removal.

   19.  In every <author> element, if there is an "asciiFullname",
        "asciiInitials", or "asciiSurname" attribute, check the content
        of that element against its matching "fullname", "initials", or
        "surname" element (respectively).  If the two are the same,
        remove the "ascii*" elelement and issue a warning about the
        removal.

   20.  For any <reference> element that does not already have a
        "target" attribute, fill the target attribute in if the element
        has one or more <seriesinfo> child element(s) and the "name"
        attribute of the <seriesinfo> element is "RFC", "Internet-
        Draft", or "DOI" or other value for which it is clear what the
        "target" should be.  The particular URLs for RFCs, Internet-
        Drafts, and DOIs for this step will be specified later by the
        RFC Editor and the IESG.  These URLs might also be different
        before and after the v3 format is adopted.





Hoffman & Hildebrand    Expires October 17, 2016                [Page 6]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   21.  For each <reference> or <referencegroup> that has an associated
        <displayreference>, replace the value of the "anchor" attribute
        with the value of the "to" attribute of the associated
        <displayreference>.

   22.  For every <section> element that has a (deprecated) "title"
        attribute, remove the "title" attribute and insert a <name>
        element in that section with the title from the attribute.

   23.  Add a "slugifiedName" attribute to each <name> element that does
        not contain one; replace the attribute if it contains a value
        that begins with "n-".

   24.  If the "sortRefs" attribute of the <rfc> element is true, sort
        the <reference>s and <referencegroup>s lexically by the value of
        the "anchor" attribute, as modified by the "to" attribute of any
        <displayreference> element.  The RFC Editor needs to determine
        what the rules for lexical sorting are.  The authors of this
        document acknowledge that getting consensus on this will be a
        difficult task.

   25.  Add "pn" attributes for all parts.  Parts are:

        *  <section> in <middle>: pn='s-1.4.2'

        *  <references>: pn='s-12' or pn='s-12.1'

        *  <abstract>: pn='s-abstract'

        *  <note>: pn='s-note-2'

        *  <section> in <boilerplate>: pn='s-boilerplate-1'

        *  <table>: pn='t-3'

        *  <figure>: pn='f-4'

        *  <artwork>, <aside>, <blockquote>, <dt>, <li>, <sourcecode>,
           <t>: pn='p-[section]-[counter]'

   26.  In every <iref> element, create a document-unique "irefid"
        attribute.  The value of the "irefid" attribute will start with
        's-', and use the item attribute, the subitem attribute (if it
        exists), and a counter to ensure uniqueness.  For example, the
        first instance of "<iref item='foo' subitem='bar'>" will get the
        irefid 's-foo-bar-1'.





Hoffman & Hildebrand    Expires October 17, 2016                [Page 7]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   27.  Add a "start" attribute to every <ol> element containing a group
        that does not already have a start.

   28.  For each <xref> element referring to a <reference> or
        <referencegroup> that has an associated <displayreference>,
        modify the "target" attribute of the <xref> to match the "to"
        attribute of the associated <displayreference>.

   29.  For each <xref> element that has content, fill the
        "derivedContent" with the element content, having first trimmed
        the whitespace from ends of content text.  Issue a warning if
        the "derivedContent" attribute already exists and has a
        different value from what was being filled in.

   30.  For each <xref> element that does not have content, fill the
        "derivedContent" based on the "format" attribute.

        *  For format='counter', the "derivedContent" is the section,
           figure, table, or ordered list number of the element with
           anchor equal to the xref target.

        *  For format='default' and the "target" attribute points to a
           <reference> or <referencegroup> element, the "derivedContent"
           is the value of the "target" attribute (or the "to" attribute
           of a <displayreference> element for the targeted
           <reference>).

        *  For format='default' and the "target" attribute points to a
           <section>, <figure>, or <table>, the "derivedContent" is the
           name of the thing pointed to, such as "Section 2.3",
           "Figure 12", or "Table 4".

        *  For format='title', if the target is a <reference> element,
           the "derivedContent" attribute is the name of the reference,
           extracted from the <title> child of the <front> child of the
           reference.

        *  For format='title', if the target element has a <name> child
           element, the "derivedContent" attribute is the text content
           of that <name> element concatenated with the text content of
           each descendant node of <name> (that is, stripping out all of
           the XML markup, leaving only the text).

        *  For format='title', if the target element does not contain a
           <name> child element, the "derivedContent" attribute is the
           value of the "target" attribute with no other adornment.
           Issue a warning if the "derivedContent" attribute already




Hoffman & Hildebrand    Expires October 17, 2016                [Page 8]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


           exists and has a different value from what was being filled
           in.

   31.  For each <relref> element referring to a <reference> that has an
        associated <displayreference>, modify the "target" attribute of
        the <relref> to match the "to" attribute of the associated
        <displayreference>.

   32.  If any <relref> element's "target" attribute refers to anything
        but a <reference> element, give an error.

   33.  For each <relref> element, fill in the "derivedLink" attribute.

   34.  For each <relref> element that has content, the "displayFormat"
        attribute is ignored.  Fill the "derivedRemoteContent" with the
        element content, having first trimmed the whitespace from ends
        of content text.  Issue a warning if the "derivedRemoteContent"
        attribute already exists and has a different value from what was
        being filled in.

   35.  Remove every <displayreference> element.

   36.  If an <artwork> element has a "src" attribute where no scheme is
        specified, replace it with a URI that uses the "file:" scheme in
        a path relative to the file being processed.  Do not include the
        full path in the "src" attribute.  See Section 8 for warnings
        about this step.  This will likely be one of the most common
        authoring approaches.

   37.  If an <artwork> element has a "src" attribute with a "file:"
        scheme, and if processing the URL would cause the processor to
        retrieve a file that is not in the same directory, or a
        subdirectory, as the file being processed, give an error.  If
        the "src" has any shellmeta strings (such as "`", "$USER", and
        so on) that would be processed , give an error.  Replace the
        "src" attribute with a URI that uses the "file:" scheme in a
        path relative to the file being processed.  This rule attempts
        to prevent <artwork src='file:///etc/passwd'> and similar
        security issues.  See Section 8 for warnings about this step.

   38.  If an <artwork> element has a "src" attribute, and the element
        has content, give an error.

   39.  If an <artwork> element has type='svg' and there is a "src"
        attribute, the data needs to be moved into the content of the
        <artwork> element.





Hoffman & Hildebrand    Expires October 17, 2016                [Page 9]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


        *  If the "src" URI scheme is "data:", fill the content of the
           <artwork> element with that data and remove the "src"
           attribute.

        *  If the "src" URI scheme is "file:", "http:", or "https:",
           fill the content of the <artwork> element with the resolved
           XML from the URI in the "src" attribute.  Add an
           "originalSrc" attribute with the value of the URI and remove
           the "src" attribute.

   40.  If an <artwork> element has type='binary-art', the data needs to
        be in a "src" attribute with a URI scheme of "data:".  If the
        "src" URI scheme is "file:", "http:", or "https:", resolve the
        URL.  Replace the "src" attribute with a "data:" URI, add an
        "originalSrc" attribute with the value of the URI, and remove
        the "src" attribute.  For the "http:" and "https:" URI schemes,
        the mediatype of the "data:" URI will be the Content-Type of the
        HTTP response.  For the "file:" URI scheme, the mediatype of the
        "data:" URI needs to be guessed with heuristics (this is
        possibly a bad idea).  This also fails for content that includes
        binary images but uses a type other than "binary-art".  Note:
        since this feature can't be used for RFCs at the moment, this
        entire feature might be de-prioritized.

   41.  If an <artwork> element does not have type='svg' or
        type='binary-art' and there is a "src" attribute, the data needs
        to be moved into the content of the <artwork> element.  Note
        that this step assumes that all of the preferred types other
        than "binary-art" are text, which is possibly wrong.

        *  If the "src" URI scheme is "data:", fill the content of the
           <artwork> element with the correctly-escaped form of that
           data and remove the "src" attribute.

        *  If the "src" URI scheme is "file:", "http:", or "https:",
           fill the content of the <artwork> element with the correctly-
           escaped form of the resolved text from the URI in the "src"
           attribute.  Add an "originalSrc" attribute with the value of
           the URI and remove the "src" attribute.

   42.  If a <sourcecode> element has a "src" attribute where no scheme
        is specified, treat the scheme as "file:" in a path relative to
        the file being processed and replace the "src" attribute with a
        "file:" URI.

   43.  If a <sourcecode> element has a "src" attribute with a "file:"
        scheme, and if processing the URL would cause the processor to
        retrieve a file that is not in the same directory, or a



Hoffman & Hildebrand    Expires October 17, 2016               [Page 10]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


        subdirectory, as the file being processed, give an error.  This
        rule attempts to prevent <sourcecode src='file:///etc/passwd'>
        and similar security issues.

   44.  If a <sourcecode> element has a "src" attribute, and the element
        has content, give an error.

   45.  If a <sourcecode> element has a "src" attribute, the data needs
        to be moved into the content of the <sourcecode> element.

        *  If the "src" URI scheme is "data:", fill the content of the
           <sourcecode> element with the appropriately-escaped data and
           remove the "src" attribute.

        *  If the "src" URI scheme is "file:", "http:", or "https:",
           fill the content of the <sourcecode> element with the
           appropriately-escaped resolved text from the URI in the "src"
           attribute.  Add an "originalSrc" attribute with the value of
           the URI and remove the "src" attribute.

   46.  Determine all the characters used in the document, and fill in
        the "scripts" attribute for <rfc>.

   47.  If in RFC production mode, remove all <link> elements whose
        "rel" attribute has the value "alternate".

   48.  If in RFC production mode, check if there is a <link> element
        with the current ISSN for the RFC series (2070-1721); if not,
        add it in the form <link rel="item" href="urn:issn:2070-1721">.

   49.  If in RFC production mode, check if there is a <link> element
        with a DOI for this RFC; if not, add one of the form <link
        rel="describedBy" href="https://dx.doi.org/10.17487/rfcdddd">.

   50.  If in RFC production mode, check if there is a <link> element
        with the file name of the Internet-Draft that became this RFC
        the form <link rel="convertedFrom"
        href="https://datatracker.ietf.org/doc/draft-tttttttttt/">.  If
        one does not exist, give an error.

   51.  If in RFC production mode, remove all "xml:base" or
        "originalSrc" attributes from all elements.

   52.  Ensure that the output has the "version" attribute of <rfc>, and
        that it is set to "3".  If there is already a different value,
        give an error.





Hoffman & Hildebrand    Expires October 17, 2016               [Page 11]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   53.  If in RFC production mode, ensure that the result is in full
        compliance to v3 schema, without any deprecated elements or
        attributes, and give an error if any issues are found.

   54.  Pretty-format the XML output.  (Note: tools like
        https://github.com/hildjj/dentin do an adequate job.)

6.  Additional Uses for the Prep Tool

   There will be a need for Internet-Draft authors who include files
   from their local disk (such as for <artwork src="mydrawing.svg"/>) to
   have the contents of those files inlined to their drafts before
   submitting them to the Internet-Draft processor.  (There is a
   possibility that the Internet-Draft processor will allow XML files
   and accompanying files to be submitted at the same time, but this
   seems troublesome from a security, portability, and complexity
   standpoint.)  For these users, having a local copy of the prep tool
   that has an option to just inline all local files would be terribly
   useful.  That option would be a proper subset of the steps given in
   Section 5.

   A feature that might be useful in a local prep tool would be the
   inverse of the "just inline" option would be "extract all".  This
   would allow a user who has a v3 RFC or Internet-Draft to dump all of
   the <artwork> and <sourcecode> elements into local files instead of
   having to find each one in the XML.  This option might even do as
   much validation as possible on the extracted <sourcecode> elements.
   This feature might also remove some of the features added by the prep
   tool (such as part numbers and slugifiedName's starting with "n-") in
   order to make the resulting file easier to edit.

7.  IANA Considerations

   None.

8.  Security Considerations

   Steps in this document attempt to prevent the <artwork> and
   <sourcecode> entities from exposing the contents of files outside the
   directory in which the document being processed resides.  For
   example, values starting with "/", "./", or "../" should generate
   errors.

   The security considerations in [RFC3470] apply here.  In specific,
   processing XML external references can expose a prep tool
   implementation to various threats by causing the implementation to
   access external resources automatically.  It is important to disallow




Hoffman & Hildebrand    Expires October 17, 2016               [Page 12]

Internet-Draft        RFC v3 Prep Tool Description            April 2016


   arbitrary access to such external references within XML data from
   untrusted sources.

9.  Acknowledgements

   Many people contributed valuable ideas to this document.  Special
   thanks go to Robert Sparks for his in-depth review and contributions
   early in the development of this document.

10.  Informative References

   [I-D.iab-rfc5741bis]
              Halpern, J., Daigle, L., and O. Kolkman, "On RFC Streams,
              Headers, and Boilerplates", draft-iab-rfc5741bis-02 (work
              in progress), February 2016.

   [I-D.iab-xml2rfc]
              Hoffman, P., "The "xml2rfc" version 3 Vocabulary", draft-
              iab-xml2rfc-03 (work in progress), February 2016.

   [RFC3470]  Hollenbeck, S., Rose, M., and L. Masinter, "Guidelines for
              the Use of Extensible Markup Language (XML) within IETF
              Protocols", BCP 70, RFC 3470, DOI 10.17487/RFC3470,
              January 2003, <http://www.rfc-editor.org/info/rfc3470>.

   [RFC6949]  Flanagan, H. and N. Brownlee, "RFC Series Format
              Requirements and Future Development", RFC 6949,
              DOI 10.17487/RFC6949, May 2013,
              <http://www.rfc-editor.org/info/rfc6949>.

Authors' Addresses

   Paul Hoffman
   ICANN

   Email: paul.hoffman@icann.org


   Joe Hildebrand
   Cisco

   Email: jhildebr@cisco.com









Hoffman & Hildebrand    Expires October 17, 2016               [Page 13]
